apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: gitpod
  region: eu-west-2
  version: "1.21"

iam:
  withOIDC: true

  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true
    - metadata:
        name: ebs-csi-controller-sa
        namespace: kube-system
      wellKnownPolicies:
        ebsCSIController: true
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
      wellKnownPolicies:
        autoScaler: true

availabilityZones:
  - eu-west-2a
  - eu-west-2b
  - eu-west-2c

vpc:
  autoAllocateIPv6: false
  nat:
    gateway: Single
cloudWatch:
  clusterLogging:
    enableTypes: ["audit", "authenticator"]

privateCluster:
  enabled: false
  additionalEndpointServices:
    - autoscaling
    - logs

managedNodeGroups:
  - name: workspaces
    desiredCapacity: 1
    minSize: 1
    maxSize: 1
    disableIMDSv1: false
    volumeSize: 50
    volumeType: "gp2"
    
    
    ebsOptimized: true
    privateNetworking: true
    ami: ami-05f027fd3d0187541

    tags:
      # EC2 tags required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/gitpod: "owned"
    iam:
      attachPolicyARNs: &attachPolicyARNs
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      withAddonPolicies: &withAddonPolicies
        albIngress: true
        autoScaler: false
        cloudWatch: false
        certManager: true
        ebs: true
    overrideBootstrapCommand: |
      #!/bin/bash

      declare -a LABELS=(
        eks.amazonaws.com/nodegroup="workspaces"
        gitpod.io/workload_workspace_services=true
        gitpod.io/workload_workspace_regular=true
        gitpod.io/workload_workspace_headless=true
      )

      export KUBELET_EXTRA_ARGS="$(printf -- "--max-pods=110 --node-labels=%s" $(IFS=$','; echo "${LABELS[*]}"))"
      /etc/eks/bootstrap.sh gitpod

    spot: true
    instanceType: "t3a.xlarge"

  - name: services
    desiredCapacity: 1
    minSize: 1
    maxSize: 1
    disableIMDSv1: false
    volumeSize: 50
    volumeType: "gp2"
    
    
    ebsOptimized: true
    privateNetworking: true
    ami: ami-05f027fd3d0187541

    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/gitpod: "owned"
    iam:
      attachPolicyARNs: *attachPolicyARNs
      withAddonPolicies: *withAddonPolicies
    overrideBootstrapCommand: |
      #!/bin/bash

      declare -a LABELS=(
        eks.amazonaws.com/nodegroup="services"
        gitpod.io/workload_meta=true
        gitpod.io/workload_ide=true
      )

      export KUBELET_EXTRA_ARGS="$(printf -- "--max-pods=110 --node-labels=%s" $(IFS=$','; echo "${LABELS[*]}"))"
      /etc/eks/bootstrap.sh gitpod

    spot: true
    instanceType: "t3a.xlarge"
